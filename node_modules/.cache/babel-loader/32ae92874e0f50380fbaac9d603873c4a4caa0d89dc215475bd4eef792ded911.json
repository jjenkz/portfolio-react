{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jacob Jenkins\\\\Desktop\\\\modules-hmwk\\\\portfolio-react\\\\src\\\\components\\\\ThemeToggle.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\n// Styles\nimport styled from \"styled-components\";\n// State\nimport { useSelector } from \"react-redux\";\nimport { selectMode } from \"../app/appSlice\";\nimport PropTypes from \"prop-types\";\n// Icons\nimport { Icon } from \"@iconify/react\";\n\n// #region styled-components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledSwitch = styled.label`\n  /* Slider pill */\n  display: flex;\n  width: 3.2rem;\n  font-size: 1.5rem;\n  border-radius: 30px;\n  transition: var(--transition);\n  border: 2px solid;\n\n  /* Hide defualt checkbox */\n  input[type=\"checkbox\"] {\n    height: 0;\n    width: 0;\n    opacity: 0;\n  }\n\n  /* Move span when checked */\n  input[type=\"checkbox\"]:checked + div {\n    transform: translateX(100%);\n  }\n\n  div {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    transition: var(--transition);\n  }\n`;\n// #endregion\n\n// #region functions\n_c = StyledSwitch;\nconst setStoredTheme = theme => localStorage.setItem(\"theme\", theme);\n// #endregion\n\n// #region component\nconst propTypes = {\n  closeDelay: PropTypes.number,\n  setExpanded: PropTypes.func.isRequired,\n  setTheme: PropTypes.func.isRequired\n};\nconst ThemeToggle = _ref => {\n  _s();\n  let {\n    closeDelay = 250,\n    setExpanded,\n    setTheme\n  } = _ref;\n  const theme = useSelector(selectMode);\n  const toggleTheme = () => {\n    const themType = theme === \"light\" ? \"dark\" : \"light\";\n    setTheme(themType);\n    setStoredTheme(themType);\n  };\n  return /*#__PURE__*/_jsxDEV(StyledSwitch, {\n    onClick: () => {\n      setTimeout(() => {\n        setExpanded(false);\n      }, closeDelay);\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      \"aria-label\": `Toggle theme, currently ${theme}.`,\n      onClick: () => toggleTheme()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: theme === \"light\" ? /*#__PURE__*/_jsxDEV(Icon, {\n        icon: \"game-icons:sunflower\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Icon, {\n        icon: \"game-icons:moon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeToggle, \"EAneyT91dqW6z6wQ5fhCq5vmnAM=\", false, function () {\n  return [useSelector];\n});\n_c2 = ThemeToggle;\nThemeToggle.propTypes = propTypes;\n// #endregion\n\nexport default ThemeToggle;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledSwitch\");\n$RefreshReg$(_c2, \"ThemeToggle\");","map":{"version":3,"names":["React","styled","useSelector","selectMode","PropTypes","Icon","jsxDEV","_jsxDEV","StyledSwitch","label","_c","setStoredTheme","theme","localStorage","setItem","propTypes","closeDelay","number","setExpanded","func","isRequired","setTheme","ThemeToggle","_ref","_s","toggleTheme","themType","onClick","setTimeout","children","type","fileName","_jsxFileName","lineNumber","columnNumber","icon","_c2","$RefreshReg$"],"sources":["C:/Users/Jacob Jenkins/Desktop/modules-hmwk/portfolio-react/src/components/ThemeToggle.jsx"],"sourcesContent":["import React from \"react\";\n// Styles\nimport styled from \"styled-components\";\n// State\nimport { useSelector } from \"react-redux\";\nimport { selectMode } from \"../app/appSlice\";\nimport PropTypes from \"prop-types\";\n// Icons\nimport { Icon } from \"@iconify/react\";\n\n// #region styled-components\nconst StyledSwitch = styled.label`\n  /* Slider pill */\n  display: flex;\n  width: 3.2rem;\n  font-size: 1.5rem;\n  border-radius: 30px;\n  transition: var(--transition);\n  border: 2px solid;\n\n  /* Hide defualt checkbox */\n  input[type=\"checkbox\"] {\n    height: 0;\n    width: 0;\n    opacity: 0;\n  }\n\n  /* Move span when checked */\n  input[type=\"checkbox\"]:checked + div {\n    transform: translateX(100%);\n  }\n\n  div {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    transition: var(--transition);\n  }\n`;\n// #endregion\n\n// #region functions\nconst setStoredTheme = (theme) => localStorage.setItem(\"theme\", theme);\n// #endregion\n\n// #region component\nconst propTypes = {\n  closeDelay: PropTypes.number,\n  setExpanded: PropTypes.func.isRequired,\n  setTheme: PropTypes.func.isRequired,\n};\n\nconst ThemeToggle = ({ closeDelay = 250, setExpanded, setTheme }) => {\n  const theme = useSelector(selectMode);\n\n  const toggleTheme = () => {\n    const themType = theme === \"light\" ? \"dark\" : \"light\";\n    setTheme(themType);\n    setStoredTheme(themType);\n  };\n\n  return (\n    <StyledSwitch\n      onClick={() => {\n        setTimeout(() => {\n          setExpanded(false);\n        }, closeDelay);\n      }}\n    >\n      <input\n        type=\"checkbox\"\n        aria-label={`Toggle theme, currently ${theme}.`}\n        onClick={() => toggleTheme()}\n      />\n      <div>\n        {theme === \"light\" ? (\n          <Icon icon=\"game-icons:sunflower\" />\n        ) : (\n          <Icon icon=\"game-icons:moon\" />\n        )}\n      </div>\n    </StyledSwitch>\n  );\n};\n\nThemeToggle.propTypes = propTypes;\n// #endregion\n\nexport default ThemeToggle;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,OAAOC,MAAM,MAAM,mBAAmB;AACtC;AACA,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,UAAU,QAAQ,iBAAiB;AAC5C,OAAOC,SAAS,MAAM,YAAY;AAClC;AACA,SAASC,IAAI,QAAQ,gBAAgB;;AAErC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,GAAGP,MAAM,CAACQ,KAAM;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AAAAC,EAAA,GA9BMF,YAAY;AA+BlB,MAAMG,cAAc,GAAIC,KAAK,IAAKC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;AACtE;;AAEA;AACA,MAAMG,SAAS,GAAG;EAChBC,UAAU,EAAEZ,SAAS,CAACa,MAAM;EAC5BC,WAAW,EAAEd,SAAS,CAACe,IAAI,CAACC,UAAU;EACtCC,QAAQ,EAAEjB,SAAS,CAACe,IAAI,CAACC;AAC3B,CAAC;AAED,MAAME,WAAW,GAAGC,IAAA,IAAiD;EAAAC,EAAA;EAAA,IAAhD;IAAER,UAAU,GAAG,GAAG;IAAEE,WAAW;IAAEG;EAAS,CAAC,GAAAE,IAAA;EAC9D,MAAMX,KAAK,GAAGV,WAAW,CAACC,UAAU,CAAC;EAErC,MAAMsB,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,QAAQ,GAAGd,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO;IACrDS,QAAQ,CAACK,QAAQ,CAAC;IAClBf,cAAc,CAACe,QAAQ,CAAC;EAC1B,CAAC;EAED,oBACEnB,OAAA,CAACC,YAAY;IACXmB,OAAO,EAAEA,CAAA,KAAM;MACbC,UAAU,CAAC,MAAM;QACfV,WAAW,CAAC,KAAK,CAAC;MACpB,CAAC,EAAEF,UAAU,CAAC;IAChB,CAAE;IAAAa,QAAA,gBAEFtB,OAAA;MACEuB,IAAI,EAAC,UAAU;MACf,cAAa,2BAA0BlB,KAAM,GAAG;MAChDe,OAAO,EAAEA,CAAA,KAAMF,WAAW,CAAC;IAAE;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,eACF3B,OAAA;MAAAsB,QAAA,EACGjB,KAAK,KAAK,OAAO,gBAChBL,OAAA,CAACF,IAAI;QAAC8B,IAAI,EAAC;MAAsB;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAEpC3B,OAAA,CAACF,IAAI;QAAC8B,IAAI,EAAC;MAAiB;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAC/B;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAEnB,CAAC;AAACV,EAAA,CA/BIF,WAAW;EAAA,QACDpB,WAAW;AAAA;AAAAkC,GAAA,GADrBd,WAAW;AAiCjBA,WAAW,CAACP,SAAS,GAAGA,SAAS;AACjC;;AAEA,eAAeO,WAAW;AAAC,IAAAZ,EAAA,EAAA0B,GAAA;AAAAC,YAAA,CAAA3B,EAAA;AAAA2B,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}