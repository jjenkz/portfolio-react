{"ast":null,"code":"import React from\"react\";// Styles\nimport styled from\"styled-components\";// State\nimport{useSelector}from\"react-redux\";import{selectMode}from\"../app/appSlice\";// Icons\nimport{Icon}from\"@iconify/react\";// #region styled-components\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const StyledSwitch=styled.label`\n  /* Slider pill */\n  display: flex;\n  width: 3.2rem;\n  font-size: 1.5rem;\n  border-radius: 30px;\n  transition: var(--transition);\n  border: 2px solid;\n\n  /* Hide defualt checkbox */\n  input[type=\"checkbox\"] {\n    height: 0;\n    width: 0;\n    opacity: 0;\n  }\n\n  /* Move span when checked */\n  input[type=\"checkbox\"]:checked + div {\n    transform: translateX(100%);\n  }\n\n  div {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    transition: var(--transition);\n  }\n`;// #endregion\n// #region functions\nconst setStoredTheme=theme=>localStorage.setItem(\"theme\",theme);// #endregion\n// #region component\nconst ThemeToggle=_ref=>{let{closeDelay=250,setExpanded,setTheme}=_ref;const theme=useSelector(selectMode);const toggleTheme=()=>{const themType=theme===\"light\"?\"dark\":\"light\";setTheme(themType);setStoredTheme(themType);};return/*#__PURE__*/_jsxs(StyledSwitch,{onClick:()=>{setTimeout(()=>{setExpanded(false);},closeDelay);},children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",\"aria-label\":`Toggle theme, currently ${theme}.`,onClick:()=>toggleTheme()}),/*#__PURE__*/_jsx(\"div\",{children:theme===\"light\"?/*#__PURE__*/_jsx(Icon,{icon:\"game-icons:sunflower\"}):/*#__PURE__*/_jsx(Icon,{icon:\"game-icons:moon\"})})]});};// #endregion\nexport default ThemeToggle;","map":{"version":3,"names":["React","styled","useSelector","selectMode","Icon","jsx","_jsx","jsxs","_jsxs","StyledSwitch","label","setStoredTheme","theme","localStorage","setItem","ThemeToggle","_ref","closeDelay","setExpanded","setTheme","toggleTheme","themType","onClick","setTimeout","children","type","icon"],"sources":["C:/Users/Jacob Jenkins/Desktop/modules-hmwk/portfolio-react/src/components/ThemeToggle.jsx"],"sourcesContent":["import React from \"react\";\n// Styles\nimport styled from \"styled-components\";\n// State\nimport { useSelector } from \"react-redux\";\nimport { selectMode } from \"../app/appSlice\";\nimport PropTypes from \"prop-types\";\n// Icons\nimport { Icon } from \"@iconify/react\";\n\n// #region styled-components\nconst StyledSwitch = styled.label`\n  /* Slider pill */\n  display: flex;\n  width: 3.2rem;\n  font-size: 1.5rem;\n  border-radius: 30px;\n  transition: var(--transition);\n  border: 2px solid;\n\n  /* Hide defualt checkbox */\n  input[type=\"checkbox\"] {\n    height: 0;\n    width: 0;\n    opacity: 0;\n  }\n\n  /* Move span when checked */\n  input[type=\"checkbox\"]:checked + div {\n    transform: translateX(100%);\n  }\n\n  div {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    transition: var(--transition);\n  }\n`;\n// #endregion\n\n// #region functions\nconst setStoredTheme = (theme) => localStorage.setItem(\"theme\", theme);\n// #endregion\n\n// #region component\nconst propTypes = {\n  closeDelay: PropTypes.number,\n  setExpanded: PropTypes.func.isRequired,\n  setTheme: PropTypes.func.isRequired,\n};\n\nconst ThemeToggle = ({ closeDelay = 250, setExpanded, setTheme }) => {\n  const theme = useSelector(selectMode);\n\n  const toggleTheme = () => {\n    const themType = theme === \"light\" ? \"dark\" : \"light\";\n    setTheme(themType);\n    setStoredTheme(themType);\n  };\n\n  return (\n    <StyledSwitch\n      onClick={() => {\n        setTimeout(() => {\n          setExpanded(false);\n        }, closeDelay);\n      }}\n    >\n      <input\n        type=\"checkbox\"\n        aria-label={`Toggle theme, currently ${theme}.`}\n        onClick={() => toggleTheme()}\n      />\n      <div>\n        {theme === \"light\" ? (\n          <Icon icon=\"game-icons:sunflower\" />\n        ) : (\n          <Icon icon=\"game-icons:moon\" />\n        )}\n      </div>\n    </StyledSwitch>\n  );\n};\n\nThemeToggle.propTypes = propTypes;\n// #endregion\n\nexport default ThemeToggle;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB;AACA,MAAO,CAAAC,MAAM,KAAM,mBAAmB,CACtC;AACA,OAASC,WAAW,KAAQ,aAAa,CACzC,OAASC,UAAU,KAAQ,iBAAiB,CAE5C;AACA,OAASC,IAAI,KAAQ,gBAAgB,CAErC;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBACA,KAAM,CAAAC,YAAY,CAAGR,MAAM,CAACS,KAAK;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CACD;AAEA;AACA,KAAM,CAAAC,cAAc,CAAIC,KAAK,EAAKC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAEF,KAAK,CAAC,CACtE;AAEA;AAOA,KAAM,CAAAG,WAAW,CAAGC,IAAA,EAAiD,IAAhD,CAAEC,UAAU,CAAG,GAAG,CAAEC,WAAW,CAAEC,QAAS,CAAC,CAAAH,IAAA,CAC9D,KAAM,CAAAJ,KAAK,CAAGV,WAAW,CAACC,UAAU,CAAC,CAErC,KAAM,CAAAiB,WAAW,CAAGA,CAAA,GAAM,CACxB,KAAM,CAAAC,QAAQ,CAAGT,KAAK,GAAK,OAAO,CAAG,MAAM,CAAG,OAAO,CACrDO,QAAQ,CAACE,QAAQ,CAAC,CAClBV,cAAc,CAACU,QAAQ,CAAC,CAC1B,CAAC,CAED,mBACEb,KAAA,CAACC,YAAY,EACXa,OAAO,CAAEA,CAAA,GAAM,CACbC,UAAU,CAAC,IAAM,CACfL,WAAW,CAAC,KAAK,CAAC,CACpB,CAAC,CAAED,UAAU,CAAC,CAChB,CAAE,CAAAO,QAAA,eAEFlB,IAAA,UACEmB,IAAI,CAAC,UAAU,CACf,aAAY,2BAA2Bb,KAAK,GAAI,CAChDU,OAAO,CAAEA,CAAA,GAAMF,WAAW,CAAC,CAAE,CAC9B,CAAC,cACFd,IAAA,QAAAkB,QAAA,CACGZ,KAAK,GAAK,OAAO,cAChBN,IAAA,CAACF,IAAI,EAACsB,IAAI,CAAC,sBAAsB,CAAE,CAAC,cAEpCpB,IAAA,CAACF,IAAI,EAACsB,IAAI,CAAC,iBAAiB,CAAE,CAC/B,CACE,CAAC,EACM,CAAC,CAEnB,CAAC,CAGD;AAEA,cAAe,CAAAX,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}